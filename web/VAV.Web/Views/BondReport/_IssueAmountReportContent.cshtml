@using System.Web.Script.Serialization
@using VAV.Model.Data.Bond
@using VAV.Web.ViewModels.Bond;
@model BondIssueAmountReport
@{
    Layout = null;
    var s = new JavaScriptSerializer();
    var reportDivID = "report" + Model.ID;
    var topDivID = "top" + Model.ID;
    var bottomDivID = "bottomDiv" + Model.ID;
    var bottomGrid = Model.BottomGrid != null ? Model.BottomGrid : new List<BondDetail>();
    var currentPageId = "currentPage" + Model.ID;
}
<div id="@reportDivID" class="Statistical">
    <div id="@topDivID" class="StatisticalTop">
        <div class="StatisticalLeft">
            <div class="colorBlock" style="height: 100%; height: -webkit-calc(100% - 7px);">
                <div class="colorBlock-header">
                    <span class="colorBlock-header-span">@Model.TopGridName</span> <a href="#" class="exportExcel" onclick="ExportIssueAmountReport(this, '@Model.ID', '@ViewData["TopGridName"]', '@ViewData["StartDate"]', '@ViewData["EndDate"]', '@ViewData["Type"]', '@ViewData["TypeList"]', '@ViewData["SubType"]', '@ViewData["UseSecType"]', '@ViewData["Unit"]', 'summary');">
                        <img alt="Export" src="~/Content/themes/base/images/excel_icon.png" />
                    </a>
                </div>
                <div id="gridDiv_@Model.ID" class="gridTable">
                    @Html.Partial("_IssueAmountStatistical", Model.TopGrid)
                </div>
            </div>
        </div>
        <div class="StatisticalRight">
            <div class="colorBlock" style="height: 100%; height: -webkit-calc(100% - 7px);">
                <div class="colorBlock-header">
                    <span class="colorBlock-header-span">@Model.ChartName</span>
                </div>
                <form align="left" style="height: 20px; margin-left: 30px">
                <label style="margin-left: 10px;">@Resources.Global.Chart_Item</label>
                @Html.DropDownListFor(m => m.Chart.ColumnName,
                                    new SelectList(Model.Chart.StatisticalAspects.Keys, ""),
                                    new
                                        {
                                            onChange = "refreshTopChart('" + Model.ID + "','" + s.Serialize(Model.Chart) + "')",
                                            id = "topchart_ddl1_" + Model.ID,
                                            @class = "largeSelect"
                                        })
                <label style="margin-left: 10px;">@Resources.Global.Chart_Type</label>
                @Html.DropDownListFor(m => m.Chart.ChartType,
                                    new SelectList(Model.Chart.ChartTypeOptions, Model.Chart.ChartTypeOptions.FirstOrDefault()),
                                    new
                                    {
                                        onChange = "refreshTopChart('" + Model.ID + "','" + s.Serialize(Model.Chart) + "')",
                                        id = "topchart_ddl2_" + Model.ID,
                                        @class = "mediumSelect"
                                    })
                <input type="button" value="@Resources.Global.View_LargeChart" onclick="showLargeChart('@Model.ID',true)" style="margin-left:25px;"/>
                </form>
                <div id="chart_container_top_@Model.ID" class="StatisticalChartContainer">
                </div>
            </div>
            <div id="chart_container_top_large_@Model.ID" style="margin-left:25px;margin-top:15px;display:none;">
            </div>
        </div>
    </div>
    <div id="statistical_report_detail_@Model.ID" class="StatisticalBottom">
        <input type="hidden" id="@currentPageId" value="1"/>
        <input type="hidden" id="typeValue" value="@ViewData["TypeValue"]"/>
        <input type="hidden" id="subTypeValue" value="@ViewData["SubTypeValue"]"/>
        <input type="hidden" id="isParent" value="true" />
        <div class="colorBlock" style="height: 100%; height: -webkit-calc(100% - 10px);">
            <div class="colorBlock-header">
                <span class="colorBlock-header-span" style="line-height: 26px;">@Model.BottomGridName</span>
                <a href="#" class="exportExcel" onclick="ExportIssueAmountReport(this, '@Model.ID', '@ViewData["BottomGridName"]', '@ViewData["StartDate"]', '@ViewData["EndDate"]', '@ViewData["Type"]', '@ViewData["TypeList"]', '@ViewData["SubType"]', '@ViewData["UseSecType"]', '@ViewData["Unit"]', 'detail');">
                    <img alt="Export" src="~/Content/themes/base/images/excel_icon.png" />
                </a>
                <div style="width: 300px; float: right; padding-right: 80px">
                    <div id="pricePagePaginate@(Model.ID)">
                    </div>
                </div>
                <div id="pricePagePaginateOfLabel@(Model.ID)" class="paginateOfLable" style="float: right;">
                </div>
                <div style="clear: both">
                </div>
            </div>
            <div id="@bottomDivID" class="gridTable">
                @Html.Partial("_BondDetail", new Tuple<IEnumerable<BondDetail>, int>(bottomGrid, Model.ID))
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    $(function () {
        $("tr:even").addClass('row-e');
        $("tr:odd").addClass('row-o');
    });
</script>
@if ( Model.TopGrid.Count() >0)
{   <script type="text/javascript">
    UpdateIssAmtDetailPagination(@Model.TopGrid.First().Issues, 1, @Model.ID, '@Resources.Global.WMP_of', '@Resources.Global.Paginate_First', '@Resources.Global.Paginate_Last', '@(Model.TopGrid.First().Type)', '@(Model.TopGrid.First().SubType)', '@(Model.TopGrid.First().IsParent)', RefreshBondDetail);
</script>
}
