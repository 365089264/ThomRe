@using VAV.Web.Common
@{
    var refreshUrl = VirtualPathUtility.ToAbsolute("~/BondInfo/GetNewListDetailData");
    var exportUrl = VirtualPathUtility.ToAbsolute("~/BondInfo/ExportExcelForNewList");

    var datePickerId = "datePicker" + ViewBag.ID;
    var endDatePickerId = "endDatePicker" + ViewBag.ID;

    int year = DateTime.Now.Year;
    int month = 12;

    if (DateTime.Now.Month == 1)
    {
        year = DateTime.Now.Year - 1;
    }
    else
    {
        month = DateTime.Now.Month - 1;
    }
    var startDate = new DateTime(year, month, 1).ToString("yyyy-MM-dd");
    var endDate = DateTime.Now.ToString("yyyy-MM-dd");
    var advancedButton = "advanced" + ViewBag.ID;
}
<div class="colorBlock" style="min-width:955px;">
    <div class="Statisticalfilter">
        <div>
            <label style="margin-left: 10px;">@Resources.Global.Report_Query_From</label>
            <input id="@datePickerId" name="@datePickerId" value="@startDate" type="text" readonly = "readonly" class = "dateInput" style = "margin-left:10px;" />
            <label style="margin-left: 10px;">@Resources.Global.Report_Query_End</label>
            <input id="@endDatePickerId" name="@endDatePickerId" value="@endDate" type="text" readonly = "readonly" class = "dateInput" style = "margin-left:10px;" />
            <label style="margin-left: 8px;">@Resources.Global.Type_Bond_Class</label>
            <select id="AssetClass@(ViewBag.ID)" name="AssetClass@(ViewBag.ID)" class = "medium2Select" multiple = "multiple" >
            @foreach (var assert in UIStaticDataCache.Instance.AssetClass)
            {
                <option value="@assert.Value" selected="@assert.Selected">@assert.Text
                </option>
            }
            </select>
            <input type="button" value="@Resources.Global.Report_Query" onclick="BondInfo.UpdateNewListDetails(@ViewBag.ID)"/>
            <input type="button" value="@Resources.Global.AdvancedSearch" onclick="AdvanceQuery(this,@advancedButton,'#newListDetailsDiv','@Resources.Global.AdvancedSearch','@Resources.Global.HideAdvancedSearch','-webkit-calc(100% - 29px)','-webkit-calc(100% - 51px)')"/>
            <input type="button" value="@Resources.Global.ColumnChooser" onclick="BondInfo.UpdateNewListDetailsColumnChosser(@ViewBag.ID)" />
            <input type="button" value="@Resources.Global.Reset_Columns_Setting" onclick="BondInfo.ResetNewListDetailsColumnChosser(@ViewBag.ID)" />
        </div>
        <div  id="@advancedButton" style="display: none">
            <label style="margin-left: 10px;">@Resources.Global.Bond_Coupon_class</label>
            <select id="CouponClass@(ViewBag.ID)" name="CouponClass@(ViewBag.ID)" class = "medium2Select" style="width: 120px;" >
            @foreach (var coupon in UIStaticDataCache.Instance.CouponClass)
            {
                <option value="@coupon.Value" selected="@coupon.Selected">@coupon.Text
                </option>
            }
            </select>
            <label style="margin-left: 10px;">@Resources.Global.Type_Option</label>
            <select id="OptionClass@(ViewBag.ID)" name="OptionClass@(ViewBag.ID)" class = "medium2Select" style="width: 120px;" >
            @foreach (var option in UIStaticDataCache.Instance.OptionClass)
            {
                <option value="@option.Value" selected="@option.Selected">@option.Text
                </option>
            }
            </select>
            <label style="margin-left: 10px;">@Resources.Global.Bond_IS_Muncipal_Bond</label>
            <select id="MDClass@(ViewBag.ID)" name="MDClass@(ViewBag.ID)" class = "medium2Select" style="width: 120px;" >
            @foreach (var option in HtmlUtil.CookSelectOptions("MDBondOption"))
            {
                <option value="@option.Value" selected="@option.Selected">@option.Text
                </option>
            }
            </select>
            <label style="margin-left: 10px;">@Resources.Global.Common_Other_Class</label>
            <select id="OthBondClass@(ViewBag.ID)" name="OthBondClass@(ViewBag.ID)" class = "medium2Select" style="width: 120px;" >
            @foreach (var option in HtmlUtil.CookSelectOptions("OthBondClass"))
            {
                <option value="@option.Value" selected="@option.Selected">@option.Text
                </option>
            }
            </select>
            <label style="margin-left: 10px;">@Resources.Global.Type_Bond_Code</label>
            <input id="BondCode@(ViewBag.ID)" name="BondCode@(ViewBag.ID)" type="text" class = "text" />
        </div>
    </div>
</div>
<div id="newListDetails"  class="colorBlock" style="height: 91%; height: -webkit-calc(100% - 48px); min-width: 955px;">
    <div class="colorBlock-header">
        <div id="pricePagePaginateOfLabel@(ViewBag.ID)" class="paginateOfLable">
        </div>
        <a href="#" class="exportExcel" onclick="BondInfo.ExportExcelNewListDetail(this, @ViewBag.ID);">
            <img alt="Export" src="~/Content/themes/base/images/excel_icon.png" />
        </a>
        <div style="width: 300px; float: right; padding-right: 80px">
            <div id="pricePagePaginate@(ViewBag.ID)">
            </div>
        </div>
        <div style="clear: both">
        </div>
    </div>
    <div id="newListDetailsDiv" style="height: 95%; height: -webkit-calc(100% - 29px); min-width: 328px;overflow: auto">
        <table id="newListDetailsTable" class="datatable Zebra" style="cursor: pointer;">
            <thead>
                <tr class="hr">
                </tr>
            </thead>
            <tbody>
            </tbody>
        </table>
        <div>@Resources.Global.Source</div>
    </div>
</div>
<script type="text/javascript">

    var BondInfo = (function (my) {
        my.UpdateNewListDetails = function (id,page) {
            if (page == null) page = 1;
            var checkedValues = BondInfo.GetCheckedMultiSelectValue("AssetClass" + @ViewBag.ID);
            if(!checkedValues || /^\s*$/.test(checkedValues)){
                alert("@Resources.Global.Alert_Select_Asset");
                return false;
            }
            AjaxWithBlock($('#newListDetails'), "@refreshUrl",
                {
                    startDate: $("#@datePickerId").val(),
                    endDate: $("#@endDatePickerId").val(),
                    bondClass: JSON.stringify(checkedValues),
                    couponClass: $('#CouponClass' + id).val(),
                    optionClass: $('#OptionClass' + id).val(),
                    bondCode: $("#BondCode" + id).val(),
                    isMD: $("#MDClass" + id).val(),
                    othBondClass:$("#OthBondClass" + id).val(),
                    id: id,
                    startPage: page,
                    pageSize: 200
                }, function (data) {
                    var markup = BondInfo.BuildRowTemplate(data.ColumTemplate, '@Resources.Global.Bond_History_Rating');
                    $.template("rowTemplate", markup);
                    $.template("colTemp", '<th>${Name}</th>');
                    $('#newListDetailsTable thead tr').empty();
                    $.tmpl("colTemp", data.ColumTemplate).appendTo("#newListDetailsTable  thead tr");
                    $('#newListDetailsTable tbody').empty();
                    $.tmpl("rowTemplate", data.RowData).appendTo("#newListDetailsTable tbody");
                    my.UpdateBondPagination(data, id, '@Resources.Global.WMP_of', '@Resources.Global.Paginate_First', '@Resources.Global.Paginate_Last',my.UpdateNewListDetails);
                });
        };

        my.ExportExcelNewListDetail = function (link, id) {
            var checkedValues = BondInfo.GetCheckedMultiSelectValue("AssetClass" + @ViewBag.ID);
            if(!checkedValues || /^\s*$/.test(checkedValues)){
                alert("@Resources.Global.Alert_Select_Asset");
                return false;
            }
            $(link).attr("href",
                "@exportUrl?startDate=" + $('#@datePickerId').val()
                    + '&endDate=' + $('#@endDatePickerId').val()
                        + '&bondClass=' + JSON.stringify(checkedValues)
                            + '&couponClass=' + $('#CouponClass' + id).val()
                                + '&optionClass=' + $('#OptionClass' + id).val()
                                    + '&bondCode=' + $("#BondCode" + id).val()
                                        + '&isMD=' + $("#MDClass" + id).val()
                                            + '&othBondClass=' + $("#OthBondClass" + id).val()
                                                + '&id=' + id
            );
        };
        my.UpdateNewListDetailsColumnChosser = function (id) {
            ColumnManager.OpenColumnSetting(id, my.UpdateNewListDetails);
        };
        my.ResetNewListDetailsColumnChosser = function (id) {
            ColumnManager.ResetColumnSetting(id, my.UpdateNewListDetails);
        };
        return my;
    } (BondInfo || {}));
    $(function () {
        $("#@datePickerId, #@endDatePickerId").datepicker({
            changeMonth: true,
            changeYear: true,
            dateFormat: 'yy-mm-dd'
        });
        
        $("#AssetClass@(ViewBag.ID)").multiselect({
            buttonMinWidth: 115,
            menuMinWidth: 240,
            checkAllText: '@Resources.Global.Select_All',
            uncheckAllText: '@Resources.Global.Unselect_All',
            noneSelectedText: '@Resources.Global.Tip_PleaseSelect',
            selectedText: '# @Resources.Global.Selected'
        });
        BondInfo.UpdateNewListDetails(@ViewBag.ID);
    });
</script>
