@using VAV.Web.Common
@{
    var refreshUrl = VirtualPathUtility.ToAbsolute("~/BondInfo/GetAbsListData");
    var exportUrl = VirtualPathUtility.ToAbsolute("~/BondInfo/ExportExcelForAbsList");
    var datePickerId = "datePicker" + ViewBag.ID;
    var endDatePickerId = "endDatePicker" + ViewBag.ID;

    int year = DateTime.Now.Year;
    int month = 12;

    if (DateTime.Now.Month == 1)
    {
        year = DateTime.Now.Year - 1;
    }
    else
    {
        month = DateTime.Now.Month - 1;
    }
    var startDate = new DateTime(year, month, 1).ToString("yyyy-MM-dd");
    var endDate = DateTime.Now.ToString("yyyy-MM-dd");
    var advancedButton = "advanced" + ViewBag.ID;
    var themeName = ThemeHelper.GetTheme(Request);
}

<div class="colorBlock" style="min-width:955px;">
    <div class="Statisticalfilter">
        <div>
            <label style="margin-left: 10px;">@Resources.Global.Report_Query_From</label>
            <input id="@datePickerId" name="@datePickerId" value="@startDate" type="text" readonly = "readonly" class = "dateInput" style = "margin-left:10px;width: 95px;" />
            <label style="margin-left: 10px;">@Resources.Global.Report_Query_End</label>
            <input id="@endDatePickerId" name="@endDatePickerId" value="@endDate" type="text" readonly = "readonly" class = "dateInput" style = "margin-left:10px;width: 95px;" />
            <label style="margin-left:8px;">@Resources.Global.BondIssue_Type</label>
            <select id="BondClass@(ViewBag.ID)" name="BondClass@(ViewBag.ID)" class = "medium2Select" multiple = "multiple" >
            @foreach (var bondC in UIStaticDataCache.Instance.AbsBondClass)
            {
                <option value="@bondC.Value" selected="@bondC.Selected">@bondC.Text
                </option>
            }
            </select>
            <input type="button" value="@Resources.Global.Report_Query" onclick="BondInfo.UpdateAbsList(@ViewBag.ID)"/>
            <input type="button" value="@Resources.Global.ColumnChooser" onclick="BondInfo.UpdateAbsListColumnChosser(@ViewBag.ID)" />
            <input type="button" value="@Resources.Global.Reset_Columns_Setting" onclick="BondInfo.ResetAbsListColumnChosser(@ViewBag.ID)" />
        </div>
        <div id="@advancedButton">
                <label>@Resources.Global.Bond_Coupon_class</label>
                <select id="CouponClass@(ViewBag.ID)" name="CouponClass@(ViewBag.ID)" class = "medium2Select" style="width: 120px;" >
                @foreach (var coupon in UIStaticDataCache.Instance.AbsRateType)
                {
                    <option value="@coupon.Value" selected="@coupon.Selected">@coupon.Text
                    </option>
                }
                </select>
                <label style="margin-left:10px;">@Resources.Global.Type_Option</label>
                <select id="OptionClass@(ViewBag.ID)" name="OptionClass@(ViewBag.ID)" class = "medium2Select" style="width: 120px;" >
                @foreach (var option in UIStaticDataCache.Instance.OptionClass)
                {
                    <option value="@option.Value" selected="@option.Selected">@option.Text
                    </option>
                }
                </select>
                <label style="margin-left:10px;">@Resources.Global.Type_Bond_Rating</label>
            <select id="Rating@(ViewBag.ID)" name="Rating@(ViewBag.ID)" class = "medium2Select" style="margin-left:2px; width:110px;" >
                @foreach (var option in UIStaticDataCache.Instance.AbsRateHis)
                {
                    <option value="@option.Value" selected="@option.Selected">@option.Text
                    </option>
                }
            </select>
            <input style="margin-left:10px;" type="radio" id="BondCode" name="CodeOrIss"  checked="checked" value="BondeCode"  />
            <label for="BondCode">@Resources.Global.Type_Bond_Code</label>
            <input type="radio" id="Issuer" name="CodeOrIss" value="Issuer"  />
            <label for="Issuer" >@Resources.Global.Bond_Issuer</label>
            <input id="BondCodeOrIss@(ViewBag.ID)" name="BondCodeOrIss@(ViewBag.ID)" type="text"  />
        </div>
    </div>
</div>

<div id="AbsListGroup" class="colorBlock" style="height: 91%;height: -webkit-calc(100% - 71px);min-width:955px;">
    <div class="colorBlock-header" >
        <div id="pricePagePaginateOfLabel@(ViewBag.ID)" class="paginateOfLable">
        </div>
        <a href="#" class="exportExcel" onclick="BondInfo.ExportExcelAbsList(this, @ViewBag.ID);">
            <img alt="Export" src="~/Content/themes/base/images/excel_icon.png" />
        </a>
        <div style="width: 300px; float: right; padding-right: 80px">
            <div id="pricePagePaginate@(ViewBag.ID)">
            </div>
        </div>
        <div style="clear: both">
        </div>
    </div>
    <div id="AbsListDiv" style="height: 95%; height: -webkit-calc(100% - 29px);min-width:328px; overflow: auto">
        <table id="AbsListTable" class="datatable Zebra" style="cursor: pointer;">
            <thead>
                <tr class="hr">
                </tr>
            </thead>
            <tbody>
            </tbody>
        </table>
        <div>@Resources.Global.Source</div>
    </div>
</div>
<script type="text/javascript">
    var BondInfo = (function (my) {
        my.UpdateAbsList  = function (id,page) {
            if (page == null) page = 1;
            var checkedValues = BondInfo.GetCheckedMultiSelectValue("BondClass" + @ViewBag.ID);
            if(!checkedValues || /^\s*$/.test(checkedValues)){
                alert("@Resources.Global.Alert_Select_Asset");
                return false;
            }
            var bondClass = $("#BondClass" + @ViewBag.ID).val();
            if(bondClass != null) bondClass = bondClass.join();
            AjaxWithBlock($('#AbsListGroup'), "@refreshUrl",
                {
                    startDate: $("#@datePickerId").val(),
                    endDate: $("#@endDatePickerId").val(),
                    bondClass: bondClass,
                    couponClass: $('#CouponClass' + id).val(),
                    optionClass: $('#OptionClass' + id).val(),
                    bondRating: $("#Rating" + id).val(),
                    isBondCode: $("input[name='CodeOrIss']:checked").val(),
                    bondCodeOrIss: $("#BondCodeOrIss" + id).val(),
                    id: id,
                    startPage: page,
                    pageSize: 200
                }, function (data) {
                    debugger;
                    var markup = BondInfo.BuildAbsRowTemplate(data.ColumTemplate, '@Resources.Global.Bond_History_Rating');
                    $.template("rowTemplate", markup);
                    $.template("colTemp", '<th>${Name}</th>');
                    $('#AbsListTable thead tr').empty();
                    $.tmpl("colTemp", data.ColumTemplate).appendTo("#AbsListTable  thead tr");
                    $('#AbsListTable tbody').empty();
                    $.tmpl("rowTemplate", data.RowData).appendTo("#AbsListTable tbody");
                    my.UpdateBondPagination(data, id, '@Resources.Global.WMP_of', '@Resources.Global.Paginate_First', '@Resources.Global.Paginate_Last',my.UpdateAbsList);
                });
        };
        my.ExportExcelAbsList = function(link, id) {
            var bondClass = $("#BondClass" + @ViewBag.ID).val();
            if(bondClass != null) bondClass = bondClass.join();
            $(link).attr("href",
                "@exportUrl?startDate=" + $('#@datePickerId').val()
                    + '&endDate=' + $('#@endDatePickerId').val()
                        + '&bondClass=' + bondClass
                            + '&couponClass=' + $('#CouponClass' + id).val()
                                + '&optionClass=' + $('#OptionClass' + id).val()
                                    + '&bondRating=' + $("#Rating" + id).val()
                                        + '&isBondCode=' + $("input[name='CodeOrIss']:checked").val()
                                              + '&bondCodeOrIss=' + $("#BondCodeOrIss" + id).val()
                                                    + '&id=' + id
            );

        };
        my.UpdateAbsListColumnChosser = function (id) {
            ColumnManager.OpenColumnSetting(id, my.UpdateAbsList);
        };
        my.ResetAbsListColumnChosser = function (id) {
            ColumnManager.ResetColumnSetting(id, my.UpdateAbsList);
        };
        my.OpenABSDetail = function (id, name) {
            OpenReport(id, name, 'ABS Detail', '/BondInfo/ABSDetail/', name);
        };
        my.BuildAbsRowTemplate = function (rawData, namePrefix) {
            var tpl = '<tr>';
            $.each(rawData, function (key, value) {
                if (value.ColumnName == 'BOND_FULL_NAME') {
                    tpl = tpl + '<td title="${BOND_FULL_NAME}" class="textLeft readTimeTD" onclick="BondInfo.OpenABSDetail(\'${BOND_UNI_CODE}\',\'${BOND_FULL_NAME}\')\"><a href="javascript:void(0)" class="realTime"></a><span style="' + value.ColumnStyle + '">${BOND_FULL_NAME}</span></td>';
                } else if(value.ColumnName == 'Issuer') {
                    tpl = tpl + '<td class="readTimeTD" onclick=\'Fundamental.OpenFundamentalDetail("${Issuer_ORG_UNI_CODE}", "${Issuer}");\'>${Issuer}</td>';
                }else {
                    if (value.ColumnStyle != "") {
                        tpl = tpl + '<td title="${' + value.ColumnName + '}" ' + appendTextAlgin(value.ColumnType) + '><span style="' + value.ColumnStyle + '">${' + value.ColumnName + '}</span></td>';
                    } else {
                        tpl = tpl + '<td ' + appendTextAlgin(value.ColumnType) + '>${' + value.ColumnName + '}</td>';
                    }
                }
            });
            tpl = tpl + '</tr>';
            return tpl;
        };

        function appendTextAlgin(stringType) {
            var className = '';
            if (stringType == 'datetime' || stringType == 'text')
                className = 'class="textLeft"';
            return className;
        }
        ;
        return my;
    } (BondInfo || {}));
    $(function () {
        $("#@datePickerId, #@endDatePickerId").datepicker({
            changeMonth: true,
            changeYear: true,
            dateFormat: 'yy-mm-dd'
        });
        $("#BondClass@(ViewBag.ID)").multiselect({
            buttonMinWidth: 115,
            menuMinWidth: 240,
            checkAllText: '@Resources.Global.Select_All',
            uncheckAllText: '@Resources.Global.Unselect_All',
            noneSelectedText: '@Resources.Global.Tip_PleaseSelect',
            selectedText: '# @Resources.Global.Selected'
        });
        BondInfo.UpdateAbsList(@ViewBag.ID);
    });
</script>